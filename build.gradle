import enforcer.rules.BanDuplicateClasses

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id("org.kordamp.gradle.project-enforcer") version "0.14.0"
}

ext {
    logbackVersion = '1.5.9'
    lombokVersion = '1.18.34'
    springBootVersion = '3.3.4'
}


group = 'com.github.willb611'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

enforce {
    rule(BanDuplicateClasses) { r ->
        r.enabled = true
        r.findAllDuplicates = true
        r.phases = ["AFTER_PROJECTS"]
        r.ignoreWhenIdentical = true
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "ch.qos.logback.access:common:2.0.3"
    implementation ("ch.qos.logback.access:tomcat:2.0.3") {
        exclude group: 'org.apache.tomcat', module: 'tomcat-catalina'
        exclude group: 'org.apache.tomcat', module: 'tomcat-coyote'
    }
    implementation "ch.qos.logback:logback-access:${logbackVersion}"
    implementation "ch.qos.logback:logback-core:${logbackVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.11.2"
    testImplementation 'io.rest-assured:rest-assured:5.5.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
